/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package simpleprime;

import org.deibic2s.ooka.componentmodel.annotations.*;
import org.deibic2s.ooka.events.Event;
import org.deibic2s.ooka.logging.ILoggerFactory;
import org.deibic2s.ooka.logging.InjectLogger;
import org.deibic2s.ooka.logging.InjectLoggerFactory;
import org.deibic2s.ooka.logging.ILogger;
import org.deibic2s.ooka.events.InjectEvent;
import org.deibic2s.ooka.events.Observes;

public class App 
{
    private boolean stopMe;

    @InjectLogger
    private ILogger logger;
    
    @InjectEvent
    private Event<String> myEvent;

    @InjectLoggerFactory
    private ILoggerFactory loggerFactory;

    @Start
    public void Startme(){
        stopMe = false;
        if(myEvent != null)
            myEvent.fire("State", "Started");
        
        dummePrim();
    }

    @Observes(
        topic = "State"
    )
    public void ToObserve(String message){
        if(logger != null)
            logger.info("Got message " + message);
    }

    @Stop
    public void StopMe(){
        stopMe = true;
        if(myEvent != null)
            myEvent.fire("State", "Stopping");
    }

    
    
    public int dummePrim(){
        int p = 3;
        int highest = 2;
        boolean prime = true;
        while(!stopMe){

            for(int i = 2; i < p/2; i++){
                if(p % i == 0){
                    prime = false;
                    if(stopMe){
                        prime = false;
                        break;
                    }
                    continue;
                } else {
                    if(stopMe){
                        prime = false;
                        break;
                    }
                }
            }
            if(prime) {
                highest = p;
                if(logger != null)
                    logger.info(""+p);
            }
            prime = true;
            p+=2;
                    
        }
        return highest;
    }
}
